DROP TABLE IF EXISTS user_plaid_filters CASCADE;
CREATE TABLE user_plaid_filters (
  id int PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  user_id uuid NOT NULL REFERENCES public.users(id),
  filter text UNIQUE NOT NULL,
  category category NOT NULL
);

ALTER TABLE user_plaid_filters OWNER TO postgres;
ALTER TABLE user_plaid_filters ENABLE ROW LEVEL SECURITY;

CREATE POLICY "Users can view own plaid filters" ON user_plaid_filters
  FOR SELECT
  TO authenticated
  USING ((SELECT auth.uid()) = user_id);

CREATE POLICY "Users can insert own plaid filters" ON user_plaid_filters
  FOR INSERT
  TO authenticated
  WITH CHECK ((SELECT auth.uid()) = user_id);

CREATE POLICY "Users can update own plaid filters" ON user_plaid_filters
  FOR UPDATE
  TO authenticated
  USING ((SELECT auth.uid()) = user_id);

CREATE POLICY "Users can delete own plaid filters" ON user_plaid_filters
  FOR DELETE
  TO authenticated
  USING ((SELECT auth.uid()) = user_id);
